name: Docker images

on:
  workflow_dispatch:
    inputs:
      docker-json:
        description: List of changed apps as a JSON array
        required: true
        type: string
      docker_registry:
        description: Docker registry
        type: string
        default: agysacrdev.azurecr.io
  workflow_call:
    inputs:
      docker-json:
        description: List of changed apps as a JSON array
        required: true
        type: string
      docker_registry:
        description: Docker registry
        type: string
        default: agysacrdev.azurecr.io

jobs:
  docker:
    name: Publish
    if: ${{ inputs.docker-json != '[]' && inputs.docker-json != '' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app-dir: ${{ fromJson(inputs.docker-json) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Setup Git User
        uses: 

      - name: Setup NPM
        uses: 
        with:
          token: ${{ secrets.AZDO_PMS_FEED_TOKEN }}
          node-version: 20

      - name: Install dependencies
        run: |
          git status
          npm install
          npm run build-all

      - name: Build
        working-directory: ${{ matrix.app-dir }}
        shell: bash
        run: |
          disable_dist_install="$(jq -r .navinkumar.workflow.docker.disableDistNPMInstall package.json)"
          if ! [[ "$disable_dist_install" =~ [Tt]rue ]]; then
            cp package*.json dist/
            cd dist/
            npm install
          fi

      - name: Image tags
        working-directory: ${{ matrix.app-dir }}
        shell: bash
        run: |
          package_version=$(jq -r '.version' package.json)
          ver_major=$(echo "$package_version" | cut -d'.' -f 1)
          ver_minor=$(echo "$package_version" | cut -d'.' -f 2)
          ver_patch=$(echo "$package_version" | cut -d'.' -f 3)
          ver_prerelease=$(echo "$package_version" | cut -d'.' -f 4)
          package_name=$(jq -r '.name' package.json)
          image_name="$(echo ${package_name/@navinkumar-} | tr '/' '-')"
          tags=()
          if [[ -n "$ver_prerelease" ]]; then
            unstable_tag="$(echo '${{ github.ref_name }}' | tr '/' '-')"
            if [[ "$unstable_tag" == "develop" ]]; then
              tags=($package_version $unstable_tag)
            else
              tags=($unstable_tag)
            fi
          else
            tags=($ver_major $ver_major.$ver_minor $ver_major.$ver_minor.$ver_patch latest)
          fi
          image_tags=()
          for tag in "${tags[@]}"; do
            image_tags+=("${{ inputs.docker_registry }}/$image_name:$tag")
          done
          function join_by { local IFS="$1"; shift; echo "$*"; }
          docker_image_tags="$(join_by ',' "${image_tags[@]}")"
          echo "::notice::DOCKER_IMAGE_TAGS=$docker_image_tags"
          echo "DOCKER_IMAGE_TAGS=$docker_image_tags" >> $GITHUB_ENV

      - name: Log into registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.docker_registry }}
          username: ${{ secrets.AGYSACRDEV_PUSH_USERNAME }}
          password: ${{ secrets.AGYSACRDEV_PUSH_SECRET }}

      - name: Docker build & Push
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.app-dir }}
          file: ${{ matrix.app-dir }}/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE_TAGS }}