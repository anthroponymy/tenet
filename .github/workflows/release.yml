name: Release

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  changes:
    name: Detect
    secrets: inherit
    uses: ./.github/workflows/changes.yml
    with:
      release: true

  versions:
    name: Versions
    needs:
      - changes
    if: ${{ needs.changes.outputs.all-json != '[]' && needs.changes.outputs.all-json != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Setup Git User
        uses: agilysys-inc/stay-github-actions/setup-git@main

      - name: Release version
        continue-on-error: true
        id: graduateRelease
        run: npm run release-version

      - name: Release version fallback
        if: ${{ always() && steps.graduateRelease.outcome == 'failure' }}
        run: |
          echo "Falling back to non-graduate release due to https://github.com/lerna/lerna/issues/2532"
          git stash
          npm run release-version-fallback

  publish:
    name: Publish modules
    needs:
      - changes
      - versions
    if: ${{ always() && needs.changes.outputs.modules-json != '[]' && needs.changes.outputs.modules-json != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Setup Git User
        uses: agilysys-inc/stay-github-actions/setup-git@main

      - name: Setup NPM
        uses: agilysys-inc/stay-github-actions/setup-nodejs@main
        with:
          token: ${{ secrets.AZDO_PMS_FEED_TOKEN }}
          node-version: 20

      - name: Install dependencies
        run: |
          npm ci
          npm run build-all

      - name: Publish
        run: |
          npm run publish

  docker:
    name: Build docker images
    needs:
      - changes
      - publish
    if: ${{ always() && needs.changes.outputs.docker-json != '[]' && needs.changes.outputs.docker-json != '' }}
    uses: ./.github/workflows/docker.yml
    with:
      docker-json: ${{ needs.changes.outputs.docker-json }}
    secrets: inherit

  nextrelease:
    needs:
      - docker
      - publish
    if: ${{ ! failure() }}
    name: Prepare next release
    uses: ./.github/workflows/nextrelease.yml
    secrets: inherit